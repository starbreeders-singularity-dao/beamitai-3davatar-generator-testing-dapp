{"ast":null,"code":"var _jsxFileName = \"/Users/thomasheindl/Documents/beamitai01/beamitai/frontend/src/components/AvatarSelection.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AvatarSelection({\n  selectedNFT,\n  handleGenerateImages,\n  loading,\n  dots\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '40%',\n      padding: '20px',\n      boxSizing: 'border-box'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Avatar Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ff00ff',\n        borderRadius: '8px',\n        padding: '20px',\n        textAlign: 'center',\n        minHeight: '400px'\n      },\n      children: selectedNFT ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedNFT,\n          alt: \"Selected\",\n          style: {\n            width: '100%',\n            height: 'auto',\n            maxWidth: '400px',\n            maxHeight: '400px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"App-link\",\n          onClick: handleGenerateImages,\n          style: {\n            marginTop: '20px'\n          },\n          children: \"Create full body image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Generating\", dots]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select an image to create your avatar.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = AvatarSelection;\nexport default AvatarSelection;\nvar _c;\n$RefreshReg$(_c, \"AvatarSelection\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","AvatarSelection","selectedNFT","handleGenerateImages","loading","dots","style","width","padding","boxSizing","children","fileName","_jsxFileName","lineNumber","columnNumber","border","borderRadius","textAlign","minHeight","src","alt","height","maxWidth","maxHeight","className","onClick","marginTop","_c","$RefreshReg$"],"sources":["/Users/thomasheindl/Documents/beamitai01/beamitai/frontend/src/components/AvatarSelection.js"],"sourcesContent":["import React from 'react';\n\nfunction AvatarSelection({ selectedNFT, handleGenerateImages, loading, dots }) {\n  return (\n    <div style={{ width: '40%', padding: '20px', boxSizing: 'border-box' }}>\n      <h2>Your Avatar Selection</h2>\n      <div style={{\n        border: '1px solid #ff00ff',\n        borderRadius: '8px',\n        padding: '20px',\n        textAlign: 'center',\n        minHeight: '400px',\n      }}>\n        {selectedNFT ? (\n          <>\n            <img\n              src={selectedNFT}\n              alt=\"Selected\"\n              style={{ width: '100%', height: 'auto', maxWidth: '400px', maxHeight: '400px' }}\n            />\n            <button className=\"App-link\" onClick={handleGenerateImages} style={{ marginTop: '20px' }}>\n              Create full body image\n            </button>\n            {loading && <p>Generating{dots}</p>}\n          </>\n        ) : (\n          <p>Please select an image to create your avatar.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default AvatarSelection;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,eAAeA,CAAC;EAAEC,WAAW;EAAEC,oBAAoB;EAAEC,OAAO;EAAEC;AAAK,CAAC,EAAE;EAC7E,oBACEP,OAAA;IAAKQ,KAAK,EAAE;MAAEC,KAAK,EAAE,KAAK;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAa,CAAE;IAAAC,QAAA,gBACrEZ,OAAA;MAAAY,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BhB,OAAA;MAAKQ,KAAK,EAAE;QACVS,MAAM,EAAE,mBAAmB;QAC3BC,YAAY,EAAE,KAAK;QACnBR,OAAO,EAAE,MAAM;QACfS,SAAS,EAAE,QAAQ;QACnBC,SAAS,EAAE;MACb,CAAE;MAAAR,QAAA,EACCR,WAAW,gBACVJ,OAAA,CAAAE,SAAA;QAAAU,QAAA,gBACEZ,OAAA;UACEqB,GAAG,EAAEjB,WAAY;UACjBkB,GAAG,EAAC,UAAU;UACdd,KAAK,EAAE;YAAEC,KAAK,EAAE,MAAM;YAAEc,MAAM,EAAE,MAAM;YAAEC,QAAQ,EAAE,OAAO;YAAEC,SAAS,EAAE;UAAQ;QAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjF,CAAC,eACFhB,OAAA;UAAQ0B,SAAS,EAAC,UAAU;UAACC,OAAO,EAAEtB,oBAAqB;UAACG,KAAK,EAAE;YAAEoB,SAAS,EAAE;UAAO,CAAE;UAAAhB,QAAA,EAAC;QAE1F;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACRV,OAAO,iBAAIN,OAAA;UAAAY,QAAA,GAAG,YAAU,EAACL,IAAI;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,eACnC,CAAC,gBAEHhB,OAAA;QAAAY,QAAA,EAAG;MAA6C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACpD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACa,EAAA,GA7BQ1B,eAAe;AA+BxB,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}