{"ast":null,"code":"const PixelShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    resolution: {\n      value: null\n    },\n    pixelSize: {\n      value: 1\n    }\n  },\n  vertexShader: [\"varying highp vec2 vUv;\", \"void main() {\", \"vUv = uv;\", \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform float pixelSize;\", \"uniform vec2 resolution;\", \"varying highp vec2 vUv;\", \"void main(){\", \"vec2 dxy = pixelSize / resolution;\", \"vec2 coord = dxy * floor( vUv / dxy );\", \"gl_FragColor = texture2D(tDiffuse, coord);\", \"}\"].join(\"\\n\")\n};\nexport { PixelShader };\n//# sourceMappingURL=PixelShader.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}