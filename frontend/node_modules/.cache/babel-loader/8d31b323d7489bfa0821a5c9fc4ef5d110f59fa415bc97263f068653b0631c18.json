{"ast":null,"code":"import { Color } from \"three\";\nconst ColorifyShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    color: {\n      value: new Color(16777215)\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform vec3 color;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"\tvec4 texel = texture2D( tDiffuse, vUv );\", \"\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\", \"\tfloat v = dot( texel.xyz, luma );\", \"\tgl_FragColor = vec4( v * color, texel.w );\", \"}\"].join(\"\\n\")\n};\nexport { ColorifyShader };\n//# sourceMappingURL=ColorifyShader.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}