{"ast":null,"code":"const KaleidoShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    sides: {\n      value: 6\n    },\n    angle: {\n      value: 0\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform sampler2D tDiffuse;\", \"uniform float sides;\", \"uniform float angle;\", \"varying vec2 vUv;\", \"void main() {\", \"\tvec2 p = vUv - 0.5;\", \"\tfloat r = length(p);\", \"\tfloat a = atan(p.y, p.x) + angle;\", \"\tfloat tau = 2. * 3.1416 ;\", \"\ta = mod(a, tau/sides);\", \"\ta = abs(a - tau/sides/2.) ;\", \"\tp = r * vec2(cos(a), sin(a));\", \"\tvec4 color = texture2D(tDiffuse, p + 0.5);\", \"\tgl_FragColor = color;\", \"}\"].join(\"\\n\")\n};\nexport { KaleidoShader };\n//# sourceMappingURL=KaleidoShader.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}