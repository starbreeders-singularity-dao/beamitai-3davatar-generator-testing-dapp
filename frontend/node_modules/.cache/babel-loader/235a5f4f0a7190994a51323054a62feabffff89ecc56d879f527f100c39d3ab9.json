{"ast":null,"code":"const BlendShader = {\n  uniforms: {\n    tDiffuse1: {\n      value: null\n    },\n    tDiffuse2: {\n      value: null\n    },\n    mixRatio: {\n      value: 0.5\n    },\n    opacity: {\n      value: 1\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform float opacity;\", \"uniform float mixRatio;\", \"uniform sampler2D tDiffuse1;\", \"uniform sampler2D tDiffuse2;\", \"varying vec2 vUv;\", \"void main() {\", \"\tvec4 texel1 = texture2D( tDiffuse1, vUv );\", \"\tvec4 texel2 = texture2D( tDiffuse2, vUv );\", \"\tgl_FragColor = opacity * mix( texel1, texel2, mixRatio );\", \"}\"].join(\"\\n\")\n};\nexport { BlendShader };\n//# sourceMappingURL=BlendShader.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}