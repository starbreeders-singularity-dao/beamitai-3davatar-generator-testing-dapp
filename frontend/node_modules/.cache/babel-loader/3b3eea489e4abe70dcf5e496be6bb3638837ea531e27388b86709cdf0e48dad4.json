{"ast":null,"code":"var _jsxFileName = \"/Users/thomasheindl/Documents/beamitai01/beamitai/frontend/src/components/WalletConnect.js\",\n  _s = $RefreshSig$();\n// src/components/WalletConnect.js\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WalletConnect() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [nfts, setNfts] = useState([]);\n  useEffect(() => {\n    if (window.ethereum) {\n      const web3 = new Web3(window.ethereum);\n      window.ethereum.enable().then(accounts => {\n        setAccount(accounts[0]);\n        fetchNFTs(accounts[0]);\n      });\n    } else {\n      alert('Please install MetaMask!');\n    }\n  }, []);\n  const fetchNFTs = async walletAddress => {\n    // Example using OpenSea API\n    const response = await fetch(`https://api.opensea.io/api/v1/assets?owner=${walletAddress}`);\n    const data = await response.json();\n    setNfts(data.assets);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wallet Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), account ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected account: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your NFTs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: nfts.map(nft => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: nft.image_url,\n            alt: nft.name,\n            style: {\n              width: '200px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: nft.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)]\n        }, nft.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your MetaMask wallet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(WalletConnect, \"p2pkwr/kycPEvZX7IuEkSZ1iki4=\");\n_c = WalletConnect;\nexport default WalletConnect;\nvar _c;\n$RefreshReg$(_c, \"WalletConnect\");","map":{"version":3,"names":["React","useState","useEffect","Web3","jsxDEV","_jsxDEV","WalletConnect","_s","account","setAccount","nfts","setNfts","window","ethereum","web3","enable","then","accounts","fetchNFTs","alert","walletAddress","response","fetch","data","json","assets","children","fileName","_jsxFileName","lineNumber","columnNumber","map","nft","src","image_url","alt","name","style","width","id","_c","$RefreshReg$"],"sources":["/Users/thomasheindl/Documents/beamitai01/beamitai/frontend/src/components/WalletConnect.js"],"sourcesContent":["// src/components/WalletConnect.js\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\n\nfunction WalletConnect() {\n  const [account, setAccount] = useState(null);\n  const [nfts, setNfts] = useState([]);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      const web3 = new Web3(window.ethereum);\n      window.ethereum.enable().then(accounts => {\n        setAccount(accounts[0]);\n        fetchNFTs(accounts[0]);\n      });\n    } else {\n      alert('Please install MetaMask!');\n    }\n  }, []);\n\n  const fetchNFTs = async (walletAddress) => {\n    // Example using OpenSea API\n    const response = await fetch(`https://api.opensea.io/api/v1/assets?owner=${walletAddress}`);\n    const data = await response.json();\n    setNfts(data.assets);\n  };\n\n  return (\n    <div>\n      <h1>Wallet Connect</h1>\n      {account ? (\n        <div>\n          <p>Connected account: {account}</p>\n          <h2>Your NFTs</h2>\n          <div>\n            {nfts.map(nft => (\n              <div key={nft.id}>\n                <img src={nft.image_url} alt={nft.name} style={{ width: '200px' }} />\n                <p>{nft.name}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      ) : (\n        <p>Please connect your MetaMask wallet.</p>\n      )}\n    </div>\n  );\n}\n\nexport default WalletConnect;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}