{"ast":null,"code":"import * as React from 'react';\nimport { addEffect, addAfterEffect } from '@react-three/fiber';\nfunction useIntersect(onChange) {\n  const ref = React.useRef(null);\n  const check = React.useRef(false);\n  const temp = React.useRef(false);\n  const callback = React.useRef(onChange);\n  React.useLayoutEffect(() => void (callback.current = onChange), [onChange]);\n  React.useEffect(() => {\n    const obj = ref.current;\n    if (obj) {\n      // Stamp out frustum check pre-emptively\n      const unsub1 = addEffect(() => {\n        check.current = false;\n        return true;\n      });\n      // If the object is inside the frustum three will call onRender\n      const oldOnRender = obj.onBeforeRender;\n      obj.onBeforeRender = () => check.current = true;\n      // Compare the check value against the temp value, if it differs set state\n      const unsub2 = addAfterEffect(() => {\n        if (check.current !== temp.current) callback.current == null || callback.current(temp.current = check.current);\n        return true;\n      });\n      return () => {\n        obj.onBeforeRender = oldOnRender;\n        unsub1();\n        unsub2();\n      };\n    }\n  }, []);\n  return ref;\n}\nexport { useIntersect };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}