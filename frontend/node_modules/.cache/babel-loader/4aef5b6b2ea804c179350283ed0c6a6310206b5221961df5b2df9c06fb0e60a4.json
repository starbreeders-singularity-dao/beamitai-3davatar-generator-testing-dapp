{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable max-classes-per-file */\nimport { ERR_ABI_ENCODING, ERR_FORMATTERS, ERR_METHOD_NOT_IMPLEMENTED, ERR_OPERATION_ABORT, ERR_OPERATION_TIMEOUT, ERR_PARAM, ERR_EXISTING_PLUGIN_NAMESPACE, ERR_INVALID_METHOD_PARAMS } from '../error_codes.js';\nimport { BaseWeb3Error } from '../web3_error_base.js';\nexport class InvalidNumberOfParamsError extends BaseWeb3Error {\n  constructor(got, expected, method) {\n    super(`Invalid number of parameters for \"${method}\". Got \"${got}\" expected \"${expected}\"!`);\n    this.got = got;\n    this.expected = expected;\n    this.method = method;\n    this.code = ERR_PARAM;\n  }\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      got: this.got,\n      expected: this.expected,\n      method: this.method\n    });\n  }\n}\nexport class InvalidMethodParamsError extends BaseWeb3Error {\n  constructor(hint) {\n    super(`Invalid parameters passed. \"${typeof hint !== 'undefined' ? hint : ''}\"`);\n    this.hint = hint;\n    this.code = ERR_INVALID_METHOD_PARAMS;\n  }\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      hint: this.hint\n    });\n  }\n}\nexport class FormatterError extends BaseWeb3Error {\n  constructor() {\n    super(...arguments);\n    this.code = ERR_FORMATTERS;\n  }\n}\nexport class MethodNotImplementedError extends BaseWeb3Error {\n  constructor() {\n    super(\"The method you're trying to call is not implemented.\");\n    this.code = ERR_METHOD_NOT_IMPLEMENTED;\n  }\n}\nexport class OperationTimeoutError extends BaseWeb3Error {\n  constructor() {\n    super(...arguments);\n    this.code = ERR_OPERATION_TIMEOUT;\n  }\n}\nexport class OperationAbortError extends BaseWeb3Error {\n  constructor() {\n    super(...arguments);\n    this.code = ERR_OPERATION_ABORT;\n  }\n}\nexport class AbiError extends BaseWeb3Error {\n  constructor(message, props) {\n    super(message);\n    this.code = ERR_ABI_ENCODING;\n    this.props = props !== null && props !== void 0 ? props : {};\n  }\n}\nexport class ExistingPluginNamespaceError extends BaseWeb3Error {\n  constructor(pluginNamespace) {\n    super(`A plugin with the namespace: ${pluginNamespace} has already been registered.`);\n    this.code = ERR_EXISTING_PLUGIN_NAMESPACE;\n  }\n}\n//# sourceMappingURL=generic_errors.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}