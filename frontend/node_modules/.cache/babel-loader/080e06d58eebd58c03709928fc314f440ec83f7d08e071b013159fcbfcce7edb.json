{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Pass } from \"./Pass.js\";\nimport { Color } from \"three\";\nclass ClearPass extends Pass {\n  constructor(clearColor, clearAlpha) {\n    super();\n    __publicField(this, \"clearColor\");\n    __publicField(this, \"clearAlpha\");\n    __publicField(this, \"_oldClearColor\");\n    this.needsSwap = false;\n    this.clearColor = clearColor !== void 0 ? clearColor : 0;\n    this.clearAlpha = clearAlpha !== void 0 ? clearAlpha : 0;\n    this._oldClearColor = new Color();\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    let oldClearAlpha;\n    if (this.clearColor) {\n      renderer.getClearColor(this._oldClearColor);\n      oldClearAlpha = renderer.getClearAlpha();\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\n    }\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n    renderer.clear();\n    if (this.clearColor) {\n      renderer.setClearColor(this._oldClearColor, oldClearAlpha);\n    }\n  }\n}\nexport { ClearPass };\n//# sourceMappingURL=ClearPass.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}