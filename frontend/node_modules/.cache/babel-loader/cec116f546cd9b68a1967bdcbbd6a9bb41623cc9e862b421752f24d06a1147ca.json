{"ast":null,"code":"const ACESFilmicToneMappingShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    exposure: {\n      value: 1\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"#define saturate(a) clamp( a, 0.0, 1.0 )\", \"uniform sampler2D tDiffuse;\", \"uniform float exposure;\", \"varying vec2 vUv;\", \"vec3 RRTAndODTFit( vec3 v ) {\", \"\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\", \"\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\", \"\treturn a / b;\", \"}\", \"vec3 ACESFilmicToneMapping( vec3 color ) {\",\n  // sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\n  \"\tconst mat3 ACESInputMat = mat3(\", \"\t\tvec3( 0.59719, 0.07600, 0.02840 ),\",\n  // transposed from source\n  \"\t\tvec3( 0.35458, 0.90834, 0.13383 ),\", \"\t\tvec3( 0.04823, 0.01566, 0.83777 )\", \"\t);\",\n  // ODT_SAT => XYZ => D60_2_D65 => sRGB\n  \"\tconst mat3 ACESOutputMat = mat3(\", \"\t\tvec3(  1.60475, -0.10208, -0.00327 ),\",\n  // transposed from source\n  \"\t\tvec3( -0.53108,  1.10813, -0.07276 ),\", \"\t\tvec3( -0.07367, -0.00605,  1.07602 )\", \"\t);\", \"\tcolor = ACESInputMat * color;\",\n  // Apply RRT and ODT\n  \"\tcolor = RRTAndODTFit( color );\", \"\tcolor = ACESOutputMat * color;\",\n  // Clamp to [0, 1]\n  \"\treturn saturate( color );\", \"}\", \"void main() {\", \"\tvec4 tex = texture2D( tDiffuse, vUv );\", \"\ttex.rgb *= exposure / 0.6;\",\n  // pre-exposed, outside of the tone mapping function\n  \"\tgl_FragColor = vec4( ACESFilmicToneMapping( tex.rgb ), tex.a );\", \"}\"].join(\"\\n\")\n};\nexport { ACESFilmicToneMappingShader };\n//# sourceMappingURL=ACESFilmicToneMappingShader.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}