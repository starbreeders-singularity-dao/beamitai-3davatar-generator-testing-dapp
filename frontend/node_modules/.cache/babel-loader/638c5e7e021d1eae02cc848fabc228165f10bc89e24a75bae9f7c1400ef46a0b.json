{"ast":null,"code":"var _jsxFileName = \"/Users/thomasheindl/Documents/beamitai01/beamitai/frontend/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport logo from './images/beamit-ai-logo.png';\nimport polygonIcon from './images/polygon.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconsole.log('Backend URL:', process.env.REACT_APP_API_URL);\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [selectedNFT, setSelectedNFT] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [nfts, setNfts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [statusMessage, setStatusMessage] = useState('');\n  const [fullBodyImageUrl, setFullBodyImageUrl] = useState(null);\n  const [showNFTGrid, setShowNFTGrid] = useState(true);\n  const [glbUrl, setGlbUrl] = useState(null);\n  const [glbStatus, setGlbStatus] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [showMintButton, setShowMintButton] = useState(false);\n  const [glbFileName, setGlbFileName] = useState(null);\n  const [modelViewerError, setModelViewerError] = useState(null);\n  useEffect(() => {\n    if (account) {\n      fetchNFTs(account);\n    }\n  }, [account]);\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        setAccount(accounts[0]);\n      } catch (error) {\n        console.error(\"Error connecting to MetaMask\", error);\n      }\n    } else {\n      alert('Please install MetaMask!');\n    }\n  };\n  const disconnectWallet = async () => {\n    try {\n      console.log('=== Starting Disconnect Process ===');\n      const response = await fetch('http://localhost:5001/api/cleanup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        console.error('Cleanup error details:', data);\n        throw new Error(data.details || 'Cleanup failed');\n      }\n      console.log('Cleanup completed successfully');\n\n      // Reset frontend state\n      setAccount(null);\n      setNfts([]);\n      setSelectedNFT(null);\n      setFullBodyImageUrl(null);\n      setGlbUrl(null);\n      setUploadStatus('');\n      setGlbStatus(null);\n      setGlbFileName(null);\n      setModelViewerError(null);\n      setShowNFTGrid(true);\n      console.log('=== Disconnect Complete ===');\n    } catch (error) {\n      console.error('Error during disconnect:', error);\n      alert(`Cleanup error: ${error.message}`);\n    }\n  };\n  const fetchNFTs = async walletAddress => {\n    try {\n      const apiKey = process.env.REACT_APP_OPENSEA_API_KEY;\n      const chain = 'matic';\n      const response = await fetch(`https://api.opensea.io/api/v2/chain/${chain}/account/${walletAddress}/nfts`, {\n        headers: {\n          'X-API-KEY': apiKey,\n          'accept': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setNfts(data.nfts || []);\n    } catch (error) {\n      console.error(\"Error fetching NFTs\", error);\n    }\n  };\n  const handleCreateAvatar = async imageUrl => {\n    setSelectedNFT(imageUrl);\n  };\n  const handleBackButton = () => {\n    setShowNFTGrid(true);\n    setFullBodyImageUrl(null);\n  };\n  const handleGenerateFullBodyImage = async () => {\n    if (!selectedNFT) {\n      alert('Please select an image first.');\n      return;\n    }\n    try {\n      setLoading(true);\n      setStatusMessage('Downloading PFP...');\n      const downloadResponse = await fetch('http://localhost:5001/save-image', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          imageUrl: selectedNFT\n        })\n      });\n      if (!downloadResponse.ok) {\n        const errorText = await downloadResponse.text();\n        console.error('Error response:', errorText);\n        throw new Error('Failed to download image');\n      }\n      const downloadData = await downloadResponse.json();\n      console.log('Image download success');\n      setStatusMessage('Image Download Success');\n      setStatusMessage('Generating Full Body Image...');\n      const generateResponse = await fetch('http://localhost:5001/generate-images', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          imageUrl: downloadData.filename\n        })\n      });\n      if (!generateResponse.ok) {\n        const errorText = await generateResponse.text();\n        console.error('Error response:', errorText);\n        throw new Error('Failed to generate full body image');\n      }\n      const data = await generateResponse.json();\n      console.log('Full body image generated:', data);\n      setFullBodyImageUrl(data.imagePath);\n      setStatusMessage('Full Body Image Generated Successfully');\n      setShowNFTGrid(false);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error generating full body image:', error);\n      setStatusMessage('Failed to generate full body image');\n      setLoading(false);\n    }\n  };\n  const handleBeamIt = async () => {\n    if (!fullBodyImageUrl) return;\n    try {\n      setUploadStatus('Processing your 3D Avatar...');\n      const filename = fullBodyImageUrl.split('/').pop();\n      const response = await fetch('http://localhost:5001/upload-to-cloud', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fileName: filename\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Upload failed');\n      }\n      const data = await response.json();\n      console.log('Upload success:', data);\n      setUploadStatus('Processing your 3D Avatar...');\n    } catch (error) {\n      console.error('Error uploading to cloud:', error);\n      setUploadStatus('Failed to beam to cloud');\n    }\n  };\n  const checkGlbStatus = async () => {\n    try {\n      console.log('=== Checking GLB Status ===');\n      const response = await fetch('http://localhost:5001/api/glb/status');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('GLB status response:', data);\n      if (data.status === 'ready' && data.fileName) {\n        const proxyUrl = `http://localhost:5001/proxy/glb`;\n        console.log('Using proxy URL:', proxyUrl);\n        setGlbUrl(proxyUrl);\n        setGlbFileName(data.fileName);\n        setGlbStatus('ready');\n        setUploadStatus('3D Avatar Ready!');\n      } else {\n        console.log('Still processing GLB file');\n      }\n    } catch (error) {\n      console.error('Error checking GLB status:', error);\n      setModelViewerError(error.message);\n    }\n  };\n  useEffect(() => {\n    if (uploadStatus === 'Processing your 3D Avatar...') {\n      const interval = setInterval(checkGlbStatus, 5000);\n      return () => clearInterval(interval);\n    }\n  }, [uploadStatus]);\n  useEffect(() => {\n    if (glbUrl) {\n      console.log('Attempting to render model-viewer with URL:', glbUrl);\n      fetch(glbUrl).then(response => {\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        console.log('GLB file is accessible');\n      }).catch(error => {\n        console.error('Error verifying GLB file:', error);\n        setModelViewerError(`Failed to access GLB file: ${error.message}`);\n      });\n    }\n  }, [glbUrl]);\n  const handleMintNFT = async () => {\n    console.log('Minting NFT...');\n    // Minting logic will go here\n  };\n  useEffect(() => {\n    console.log('Current state:', {\n      uploadStatus,\n      glbStatus,\n      glbUrl\n    });\n  }, [uploadStatus, glbStatus, glbUrl]);\n  useEffect(() => {\n    console.log('3D Model State Update:', {\n      glbStatus,\n      glbUrl,\n      glbFileName,\n      uploadStatus,\n      modelViewerError\n    });\n  }, [glbStatus, glbUrl, glbFileName, uploadStatus, modelViewerError]);\n  useEffect(() => {\n    if (!customElements.get('model-viewer')) {\n      console.log('=== Loading Model Viewer Script ===');\n      const script = document.createElement('script');\n      script.type = 'module';\n      script.src = 'https://unpkg.com/@google/model-viewer/dist/model-viewer.min.js';\n      document.head.appendChild(script);\n    }\n  }, []);\n  const ModelViewer = ({\n    glbUrl\n  }) => {\n    _s();\n    useEffect(() => {\n      console.log('ModelViewer mounted with URL:', glbUrl);\n    }, [glbUrl]);\n    return /*#__PURE__*/_jsxDEV(\"model-viewer\", {\n      src: glbUrl,\n      alt: \"3D Avatar\",\n      \"camera-controls\": true,\n      \"auto-rotate\": true,\n      \"camera-orbit\": \"0deg 75deg 105%\",\n      \"min-camera-orbit\": \"auto auto 50%\",\n      \"max-camera-orbit\": \"auto auto 200%\",\n      \"environment-image\": \"neutral\",\n      exposure: \"1\",\n      \"shadow-intensity\": \"1\",\n      \"shadow-softness\": \"0\",\n      style: {\n        width: '100%',\n        height: '400px',\n        backgroundColor: '#f5f5f5'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar hide\",\n        slot: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"update-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this);\n  };\n  _s(ModelViewer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  const renderGLBViewer = () => {\n    if (!glbUrl) return null;\n    console.log('Rendering GLB viewer with URL:', glbUrl);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"glb-viewer-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"3D Avatar View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-viewer-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(ModelViewer, {\n          glbUrl: glbUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Debug: GLB URL - \", glbUrl]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: glbUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Test GLB File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Beamit AI Logo\",\n        style: {\n          maxWidth: '250px',\n          marginLeft: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 20,\n          right: 20,\n          display: 'flex',\n          alignItems: 'center',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connectWallet,\n          className: \"wallet-button\",\n          children: account ? 'Wallet Connected' : 'Connect Wallet'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), account && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: disconnectWallet,\n          className: \"wallet-button\",\n          children: \"Disconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: polygonIcon,\n          alt: \"Polygon Icon\",\n          style: {\n            width: '30px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"pink-text\",\n          children: \"Your Avatar Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), selectedNFT && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedNFT,\n            alt: \"Selected NFT\",\n            className: \"selected-nft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nft-button\",\n            onClick: handleGenerateFullBodyImage,\n            children: loading ? 'Generating...' : 'Create Full Body Image'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"status-message\",\n            children: statusMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-dots\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), showNFTGrid ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nft-gallery-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"pink-text\",\n          children: \"Please select an image to create your avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), account ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nft-gallery\",\n          children: nfts.map((nft, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nft-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: nft.image_url,\n              alt: nft.name,\n              style: {\n                width: '100px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: nft.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCreateAvatar(nft.image_url),\n              className: \"nft-button\",\n              children: \"Choose PFP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"pink-text\",\n          children: \"Please connect your MetaMask wallet to view your NFTs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"full-body-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"full-body-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"pink-text\",\n            children: \"Your Full Body Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"full-body-image\",\n          children: uploadStatus === 'Processing your 3D Avatar...' || uploadStatus === '3D Avatar Ready!' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"model-container\",\n            children: [uploadStatus === 'Processing your 3D Avatar...' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading\",\n              children: \"Processing...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 21\n            }, this), glbStatus === 'ready' && glbUrl && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'relative',\n                  width: '600px',\n                  height: '600px',\n                  margin: '0 auto'\n                },\n                children: [modelViewerError && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                    color: '#FF1493',\n                    textAlign: 'center',\n                    padding: '20px',\n                    background: 'rgba(0,0,0,0.8)',\n                    borderRadius: '8px'\n                  },\n                  children: [\"Error loading 3D model: \", modelViewerError]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"model-viewer\", {\n                  src: glbUrl,\n                  alt: \"3D Avatar\",\n                  \"auto-rotate\": true,\n                  \"camera-controls\": true,\n                  \"camera-orbit\": \"0deg 75deg 2.5m\",\n                  \"min-camera-orbit\": \"auto auto 1.5m\",\n                  \"max-camera-orbit\": \"auto auto 4m\",\n                  \"camera-target\": \"0m -0.2m 0m\",\n                  bounds: \"tight\",\n                  \"field-of-view\": \"30deg\",\n                  \"environment-image\": \"neutral\",\n                  \"shadow-intensity\": \"1\",\n                  exposure: \"1\",\n                  \"shadow-softness\": \"1\",\n                  \"interaction-prompt\": \"auto\",\n                  \"auto-rotate-delay\": \"0\",\n                  \"rotation-per-second\": \"30deg\",\n                  \"min-field-of-view\": \"25deg\",\n                  \"max-field-of-view\": \"45deg\",\n                  \"interpolation-decay\": \"200\",\n                  loading: \"eager\",\n                  reveal: \"auto\",\n                  style: {\n                    width: '600px',\n                    height: '600px',\n                    backgroundColor: '#e0e0e0',\n                    border: '2px solid #FF1493',\n                    transform: 'translateY(-15%)',\n                    borderRadius: '8px'\n                  },\n                  onLoad: () => {\n                    console.log('=== Model Viewer Loaded ===');\n                    console.log('Source URL:', glbUrl);\n                    const modelViewer = document.querySelector('model-viewer');\n                    console.log('Model loaded state:', modelViewer.loaded);\n                  },\n                  onError: error => {\n                    console.error('Model viewer error:', error);\n                    console.error('Failed URL:', glbUrl);\n                    console.error('Error details:', {\n                      type: error.type,\n                      detail: error.detail,\n                      message: error.message\n                    });\n                    setModelViewerError(error.detail);\n                  },\n                  onProgress: event => {\n                    const progress = event.detail.totalProgress * 100;\n                    console.log('Loading progress:', {\n                      progress: progress.toFixed(2) + '%',\n                      loaded: event.detail.loaded,\n                      total: event.detail.total\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 23\n              }, this), glbFileName && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"glb-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"glb-filename\",\n                  children: [\"GLB File: \", glbFileName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"glb-url\",\n                  children: [\"URL: \", glbUrl]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleMintNFT,\n                className: \"nft-button mint-button\",\n                style: {\n                  marginTop: '20px'\n                },\n                children: \"Mint NFT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Full Body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: fullBodyImageUrl,\n              alt: \"Full Body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleBackButton,\n                className: \"nft-button\",\n                children: \"Back to NFT Selection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleBeamIt,\n                className: \"nft-button beam-button\",\n                children: \"Beam It!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status-message\",\n          children: uploadStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `nav-button ${showNFTGrid ? 'active' : ''}`,\n        onClick: () => {\n          setShowNFTGrid(true);\n          setFullBodyImageUrl(null);\n          setGlbUrl(null);\n          setUploadStatus('');\n        },\n        children: \"NFT Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `nav-button ${!showNFTGrid && fullBodyImageUrl && !glbUrl ? 'active' : ''}`,\n        onClick: () => {\n          if (fullBodyImageUrl) {\n            setShowNFTGrid(false);\n            setGlbUrl(null);\n            setUploadStatus('');\n          }\n        },\n        children: \"Full Body Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `nav-button ${!showNFTGrid && glbUrl ? 'active' : ''}`,\n        onClick: () => {\n          if (glbUrl) {\n            setShowNFTGrid(false);\n            setUploadStatus('3D Avatar Ready!');\n          }\n        },\n        children: \"3D Avatar View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this), glbUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Debug: GLB URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: glbUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        style: {\n          color: '#FF1493'\n        },\n        children: \"Test GLB File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"k7knsNmeQv0G/iBHNd5EtysAYl4=\");\n_c = App;\nconst styles = `\n.mint-button {\n  background: linear-gradient(45deg, #FF1493, #FF69B4);\n  color: white;\n  font-weight: bold;\n  padding: 12px 24px;\n  border-radius: 25px;\n  border: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.mint-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 15px rgba(255, 20, 147, 0.3);\n}\n\n.glb-filename {\n  margin-top: 10px;\n  padding: 8px;\n  background-color: rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-family: monospace;\n}\n\n.model-viewer-container {\n  position: relative;\n  width: 600px;\n  height: 600px;\n  margin: 0 auto;\n}\n\n.error-message {\n  color: #ff4444;\n  background: rgba(255, 0, 0, 0.1);\n  padding: 10px;\n  margin-top: 10px;\n  border-radius: 4px;\n  font-family: monospace;\n}\n\n.glb-info {\n  margin: 15px 0;\n  padding: 10px;\n  background: rgba(0, 0, 0, 0.05);\n  border-radius: 4px;\n}\n\n.glb-filename {\n  font-family: monospace;\n  margin: 5px 0;\n}\n\n.glb-url {\n  font-family: monospace;\n  font-size: 0.8em;\n  word-break: break-all;\n  margin: 5px 0;\n  color: #666;\n}\n\n.navigation-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin: 20px 0;\n  padding: 10px;\n  position: fixed;\n  bottom: 20px;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.9);\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.3);\n  z-index: 1000;\n}\n\n.nav-button {\n  background: transparent;\n  color: white;\n  border: 2px solid #FF1493;\n  padding: 10px 20px;\n  border-radius: 25px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: all 0.3s ease;\n  min-width: 150px;\n}\n\n.nav-button:hover {\n  background: #FF1493;\n  color: white;\n  transform: translateY(-2px);\n}\n\n.nav-button.active {\n  background: #FF1493;\n  color: white;\n}\n\n.App-content {\n  padding-bottom: 80px;\n}\n`;\nconst styleSheet = document.createElement(\"style\");\nstyleSheet.innerText = styles;\ndocument.head.appendChild(styleSheet);\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ethers","logo","polygonIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","console","log","process","env","REACT_APP_API_URL","App","_s2","_s","$RefreshSig$","selectedNFT","setSelectedNFT","account","setAccount","nfts","setNfts","loading","setLoading","statusMessage","setStatusMessage","fullBodyImageUrl","setFullBodyImageUrl","showNFTGrid","setShowNFTGrid","glbUrl","setGlbUrl","glbStatus","setGlbStatus","uploadStatus","setUploadStatus","showMintButton","setShowMintButton","glbFileName","setGlbFileName","modelViewerError","setModelViewerError","fetchNFTs","connectWallet","window","ethereum","accounts","request","method","error","alert","disconnectWallet","response","fetch","headers","data","json","ok","Error","details","message","walletAddress","apiKey","REACT_APP_OPENSEA_API_KEY","chain","status","handleCreateAvatar","imageUrl","handleBackButton","handleGenerateFullBodyImage","downloadResponse","body","JSON","stringify","errorText","text","downloadData","generateResponse","filename","imagePath","handleBeamIt","split","pop","fileName","checkGlbStatus","proxyUrl","interval","setInterval","clearInterval","then","catch","handleMintNFT","customElements","get","script","document","createElement","type","src","head","appendChild","ModelViewer","alt","exposure","style","width","height","backgroundColor","children","className","slot","_jsxFileName","lineNumber","columnNumber","renderGLBViewer","href","target","rel","maxWidth","marginLeft","position","top","right","display","alignItems","gap","onClick","map","nft","index","image_url","name","margin","left","transform","color","textAlign","padding","background","borderRadius","bounds","reveal","border","onLoad","modelViewer","querySelector","loaded","onError","detail","onProgress","event","progress","totalProgress","toFixed","total","marginTop","_c","styles","styleSheet","innerText","$RefreshReg$"],"sources":["/Users/thomasheindl/Documents/beamitai01/beamitai/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport logo from './images/beamit-ai-logo.png';\nimport polygonIcon from './images/polygon.png';\n\nconsole.log('Backend URL:', process.env.REACT_APP_API_URL);\n\nfunction App() {\n  const [selectedNFT, setSelectedNFT] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [nfts, setNfts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [statusMessage, setStatusMessage] = useState('');\n  const [fullBodyImageUrl, setFullBodyImageUrl] = useState(null);\n  const [showNFTGrid, setShowNFTGrid] = useState(true);\n  const [glbUrl, setGlbUrl] = useState(null);\n  const [glbStatus, setGlbStatus] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [showMintButton, setShowMintButton] = useState(false);\n  const [glbFileName, setGlbFileName] = useState(null);\n  const [modelViewerError, setModelViewerError] = useState(null);\n\n  useEffect(() => {\n    if (account) {\n      fetchNFTs(account);\n    }\n  }, [account]);\n\n  const connectWallet = async () => {\n    if (window.ethereum) {\n      try {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        setAccount(accounts[0]);\n      } catch (error) {\n        console.error(\"Error connecting to MetaMask\", error);\n      }\n    } else {\n      alert('Please install MetaMask!');\n    }\n  };\n\n  const disconnectWallet = async () => {\n    try {\n      console.log('=== Starting Disconnect Process ===');\n      \n      const response = await fetch('http://localhost:5001/api/cleanup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        console.error('Cleanup error details:', data);\n        throw new Error(data.details || 'Cleanup failed');\n      }\n\n      console.log('Cleanup completed successfully');\n      \n      // Reset frontend state\n      setAccount(null);\n      setNfts([]);\n      setSelectedNFT(null);\n      setFullBodyImageUrl(null);\n      setGlbUrl(null);\n      setUploadStatus('');\n      setGlbStatus(null);\n      setGlbFileName(null);\n      setModelViewerError(null);\n      setShowNFTGrid(true);\n      \n      console.log('=== Disconnect Complete ===');\n    } catch (error) {\n      console.error('Error during disconnect:', error);\n      alert(`Cleanup error: ${error.message}`);\n    }\n  };\n\n  const fetchNFTs = async (walletAddress) => {\n    try {\n      const apiKey = process.env.REACT_APP_OPENSEA_API_KEY;\n      const chain = 'matic';\n      const response = await fetch(`https://api.opensea.io/api/v2/chain/${chain}/account/${walletAddress}/nfts`, {\n        headers: {\n          'X-API-KEY': apiKey,\n          'accept': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setNfts(data.nfts || []);\n    } catch (error) {\n      console.error(\"Error fetching NFTs\", error);\n    }\n  };\n\n  const handleCreateAvatar = async (imageUrl) => {\n    setSelectedNFT(imageUrl);\n  };\n\n  const handleBackButton = () => {\n    setShowNFTGrid(true);\n    setFullBodyImageUrl(null);\n  };\n\n  const handleGenerateFullBodyImage = async () => {\n    if (!selectedNFT) {\n      alert('Please select an image first.');\n      return;\n    }\n    try {\n      setLoading(true);\n      setStatusMessage('Downloading PFP...');\n\n      const downloadResponse = await fetch('http://localhost:5001/save-image', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          imageUrl: selectedNFT\n        }),\n      });\n\n      if (!downloadResponse.ok) {\n        const errorText = await downloadResponse.text();\n        console.error('Error response:', errorText);\n        throw new Error('Failed to download image');\n      }\n\n      const downloadData = await downloadResponse.json();\n      console.log('Image download success');\n      setStatusMessage('Image Download Success');\n\n      setStatusMessage('Generating Full Body Image...');\n      const generateResponse = await fetch('http://localhost:5001/generate-images', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          imageUrl: downloadData.filename \n        }),\n      });\n\n      if (!generateResponse.ok) {\n        const errorText = await generateResponse.text();\n        console.error('Error response:', errorText);\n        throw new Error('Failed to generate full body image');\n      }\n\n      const data = await generateResponse.json();\n      console.log('Full body image generated:', data);\n      setFullBodyImageUrl(data.imagePath);\n      setStatusMessage('Full Body Image Generated Successfully');\n      setShowNFTGrid(false);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error generating full body image:', error);\n      setStatusMessage('Failed to generate full body image');\n      setLoading(false);\n    }\n  };\n\n  const handleBeamIt = async () => {\n    if (!fullBodyImageUrl) return;\n  \n    try {\n      setUploadStatus('Processing your 3D Avatar...');\n      const filename = fullBodyImageUrl.split('/').pop();\n      \n      const response = await fetch('http://localhost:5001/upload-to-cloud', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          fileName: filename \n        }),\n      });\n  \n      if (!response.ok) {\n        throw new Error('Upload failed');\n      }\n  \n      const data = await response.json();\n      console.log('Upload success:', data);\n      setUploadStatus('Processing your 3D Avatar...');\n      \n    } catch (error) {\n      console.error('Error uploading to cloud:', error);\n      setUploadStatus('Failed to beam to cloud');\n    }\n  };\n\n  const checkGlbStatus = async () => {\n    try {\n      console.log('=== Checking GLB Status ===');\n      const response = await fetch('http://localhost:5001/api/glb/status');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      \n      console.log('GLB status response:', data);\n      \n      if (data.status === 'ready' && data.fileName) {\n        const proxyUrl = `http://localhost:5001/proxy/glb`;\n        console.log('Using proxy URL:', proxyUrl);\n\n        setGlbUrl(proxyUrl);\n        setGlbFileName(data.fileName);\n        setGlbStatus('ready');\n        setUploadStatus('3D Avatar Ready!');\n      } else {\n        console.log('Still processing GLB file');\n      }\n    } catch (error) {\n      console.error('Error checking GLB status:', error);\n      setModelViewerError(error.message);\n    }\n  };\n\n  useEffect(() => {\n    if (uploadStatus === 'Processing your 3D Avatar...') {\n      const interval = setInterval(checkGlbStatus, 5000);\n      return () => clearInterval(interval);\n    }\n  }, [uploadStatus]);\n\n  useEffect(() => {\n    if (glbUrl) {\n      console.log('Attempting to render model-viewer with URL:', glbUrl);\n      fetch(glbUrl)\n        .then(response => {\n          if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n          console.log('GLB file is accessible');\n        })\n        .catch(error => {\n          console.error('Error verifying GLB file:', error);\n          setModelViewerError(`Failed to access GLB file: ${error.message}`);\n        });\n    }\n  }, [glbUrl]);\n\n  const handleMintNFT = async () => {\n    console.log('Minting NFT...');\n    // Minting logic will go here\n  };\n\n  useEffect(() => {\n    console.log('Current state:', {\n      uploadStatus,\n      glbStatus,\n      glbUrl\n    });\n  }, [uploadStatus, glbStatus, glbUrl]);\n\n  useEffect(() => {\n    console.log('3D Model State Update:', {\n      glbStatus,\n      glbUrl,\n      glbFileName,\n      uploadStatus,\n      modelViewerError\n    });\n  }, [glbStatus, glbUrl, glbFileName, uploadStatus, modelViewerError]);\n\n  useEffect(() => {\n    if (!customElements.get('model-viewer')) {\n      console.log('=== Loading Model Viewer Script ===');\n      const script = document.createElement('script');\n      script.type = 'module';\n      script.src = 'https://unpkg.com/@google/model-viewer/dist/model-viewer.min.js';\n      document.head.appendChild(script);\n    }\n  }, []);\n\n  const ModelViewer = ({ glbUrl }) => {\n    useEffect(() => {\n      console.log('ModelViewer mounted with URL:', glbUrl);\n    }, [glbUrl]);\n\n    return (\n      <model-viewer\n        src={glbUrl}\n        alt=\"3D Avatar\"\n        camera-controls\n        auto-rotate\n        camera-orbit=\"0deg 75deg 105%\"\n        min-camera-orbit=\"auto auto 50%\"\n        max-camera-orbit=\"auto auto 200%\"\n        environment-image=\"neutral\"\n        exposure=\"1\"\n        shadow-intensity=\"1\"\n        shadow-softness=\"0\"\n        style={{ width: '100%', height: '400px', backgroundColor: '#f5f5f5' }}\n      >\n        <div className=\"progress-bar hide\" slot=\"progress-bar\">\n          <div className=\"update-bar\"></div>\n        </div>\n      </model-viewer>\n    );\n  };\n\n  const renderGLBViewer = () => {\n    if (!glbUrl) return null;\n\n    console.log('Rendering GLB viewer with URL:', glbUrl);\n    \n    return (\n      <div className=\"glb-viewer-container\">\n        <h3>3D Avatar View</h3>\n        <div className=\"model-viewer-wrapper\">\n          <ModelViewer glbUrl={glbUrl} />\n        </div>\n        <div className=\"debug-info\">\n          <p>Debug: GLB URL - {glbUrl}</p>\n          <a href={glbUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            Test GLB File\n          </a>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} alt=\"Beamit AI Logo\" style={{ maxWidth: '250px', marginLeft: '20px' }} />\n        <div style={{ position: 'absolute', top: 20, right: 20, display: 'flex', alignItems: 'center', gap: '10px' }}>\n          <button onClick={connectWallet} className=\"wallet-button\">\n            {account ? 'Wallet Connected' : 'Connect Wallet'}\n          </button>\n          {account && <button onClick={disconnectWallet} className=\"wallet-button\">Disconnect</button>}\n          <img src={polygonIcon} alt=\"Polygon Icon\" style={{ width: '30px' }} />\n        </div>\n      </header>\n\n      <div className=\"App-content\">\n        <div className=\"avatar-selection\">\n          <h2 className=\"pink-text\">Your Avatar Selection</h2>\n          {selectedNFT && (\n            <div>\n              <img src={selectedNFT} alt=\"Selected NFT\" className=\"selected-nft\" />\n              <button className=\"nft-button\" onClick={handleGenerateFullBodyImage}>\n                {loading ? 'Generating...' : 'Create Full Body Image'}\n              </button>\n              <p className=\"status-message\">{statusMessage}</p>\n              {loading && <div className=\"loading-dots\">...</div>}\n            </div>\n          )}\n        </div>\n        \n        {showNFTGrid ? (\n          <div className=\"nft-gallery-container\">\n            <h2 className=\"pink-text\">Please select an image to create your avatar</h2>\n            {account ? (\n              <div className=\"nft-gallery\">\n                {nfts.map((nft, index) => (\n                  <div key={index} className=\"nft-item\">\n                    <img src={nft.image_url} alt={nft.name} style={{ width: '100px' }} />\n                    <p>{nft.name}</p>\n                    <button onClick={() => handleCreateAvatar(nft.image_url)} className=\"nft-button\">Choose PFP</button>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p className=\"pink-text\">Please connect your MetaMask wallet to view your NFTs.</p>\n            )}\n          </div>\n        ) : (\n          <div className=\"full-body-container\">\n            <div className=\"full-body-header\">\n              <h2 className=\"pink-text\">Your Full Body Image</h2>\n            </div>\n            \n            <div className=\"full-body-image\">\n              {uploadStatus === 'Processing your 3D Avatar...' || uploadStatus === '3D Avatar Ready!' ? (\n                <div className=\"model-container\">\n                  {uploadStatus === 'Processing your 3D Avatar...' && (\n                    <div className=\"loading\">Processing...</div>\n                  )}\n                  {glbStatus === 'ready' && glbUrl && (\n                    <>\n                      <div style={{\n                        position: 'relative',\n                        width: '600px',\n                        height: '600px',\n                        margin: '0 auto'\n                      }}>\n                        {modelViewerError && (\n                          <div style={{\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            transform: 'translate(-50%, -50%)',\n                            color: '#FF1493',\n                            textAlign: 'center',\n                            padding: '20px',\n                            background: 'rgba(0,0,0,0.8)',\n                            borderRadius: '8px'\n                          }}>\n                            Error loading 3D model: {modelViewerError}\n                          </div>\n                        )}\n\n                        <model-viewer\n                          src={glbUrl}\n                          alt=\"3D Avatar\"\n                          auto-rotate\n                          camera-controls\n                          camera-orbit=\"0deg 75deg 2.5m\"\n                          min-camera-orbit=\"auto auto 1.5m\"\n                          max-camera-orbit=\"auto auto 4m\"\n                          camera-target=\"0m -0.2m 0m\"\n                          bounds=\"tight\"\n                          field-of-view=\"30deg\"\n                          environment-image=\"neutral\"\n                          shadow-intensity=\"1\"\n                          exposure=\"1\"\n                          shadow-softness=\"1\"\n                          interaction-prompt=\"auto\"\n                          auto-rotate-delay=\"0\"\n                          rotation-per-second=\"30deg\"\n                          min-field-of-view=\"25deg\"\n                          max-field-of-view=\"45deg\"\n                          interpolation-decay=\"200\"\n                          loading=\"eager\"\n                          reveal=\"auto\"\n                          style={{\n                            width: '600px', \n                            height: '600px', \n                            backgroundColor: '#e0e0e0',\n                            border: '2px solid #FF1493',\n                            transform: 'translateY(-15%)',\n                            borderRadius: '8px'\n                          }}\n                          onLoad={() => {\n                            console.log('=== Model Viewer Loaded ===');\n                            console.log('Source URL:', glbUrl);\n                            const modelViewer = document.querySelector('model-viewer');\n                            console.log('Model loaded state:', modelViewer.loaded);\n                          }}\n                          onError={(error) => {\n                            console.error('Model viewer error:', error);\n                            console.error('Failed URL:', glbUrl);\n                            console.error('Error details:', {\n                              type: error.type,\n                              detail: error.detail,\n                              message: error.message\n                            });\n                            setModelViewerError(error.detail);\n                          }}\n                          onProgress={(event) => {\n                            const progress = event.detail.totalProgress * 100;\n                            console.log('Loading progress:', {\n                              progress: progress.toFixed(2) + '%',\n                              loaded: event.detail.loaded,\n                              total: event.detail.total\n                            });\n                          }}\n                        ></model-viewer>\n                      </div>\n                      {glbFileName && (\n                        <div className=\"glb-info\">\n                          <p className=\"glb-filename\">GLB File: {glbFileName}</p>\n                          <p className=\"glb-url\">URL: {glbUrl}</p>\n                        </div>\n                      )}\n                      <button \n                        onClick={handleMintNFT} \n                        className=\"nft-button mint-button\"\n                        style={{ marginTop: '20px' }}\n                      >\n                        Mint NFT\n                      </button>\n                    </>\n                  )}\n                </div>\n              ) : (\n                <>\n                  <h2>Full Body</h2>\n                  <img src={fullBodyImageUrl} alt=\"Full Body\" />\n                  <div className=\"button-group\">\n                    <button onClick={handleBackButton} className=\"nft-button\">Back to NFT Selection</button>\n                    <button onClick={handleBeamIt} className=\"nft-button beam-button\">Beam It!</button>\n                  </div>\n                </>\n              )}\n            </div>\n            \n            {uploadStatus && <p className=\"status-message\">{uploadStatus}</p>}\n          </div>\n        )}\n      </div>\n\n      <div className=\"navigation-buttons\">\n        <button \n          className={`nav-button ${showNFTGrid ? 'active' : ''}`}\n          onClick={() => {\n            setShowNFTGrid(true);\n            setFullBodyImageUrl(null);\n            setGlbUrl(null);\n            setUploadStatus('');\n          }}\n        >\n          NFT Selection\n        </button>\n        <button \n          className={`nav-button ${(!showNFTGrid && fullBodyImageUrl && !glbUrl) ? 'active' : ''}`}\n          onClick={() => {\n            if (fullBodyImageUrl) {\n              setShowNFTGrid(false);\n              setGlbUrl(null);\n              setUploadStatus('');\n            }\n          }}\n        >\n          Full Body Image\n        </button>\n        <button \n          className={`nav-button ${(!showNFTGrid && glbUrl) ? 'active' : ''}`}\n          onClick={() => {\n            if (glbUrl) {\n              setShowNFTGrid(false);\n              setUploadStatus('3D Avatar Ready!');\n            }\n          }}\n        >\n          3D Avatar View\n        </button>\n      </div>\n\n      {glbUrl && (\n        <div style={{ marginTop: '20px', textAlign: 'center' }}>\n          <p>Debug: GLB URL</p>\n          <a \n            href={glbUrl} \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            style={{ color: '#FF1493' }}\n          >\n            Test GLB File\n          </a>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst styles = `\n.mint-button {\n  background: linear-gradient(45deg, #FF1493, #FF69B4);\n  color: white;\n  font-weight: bold;\n  padding: 12px 24px;\n  border-radius: 25px;\n  border: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.mint-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 15px rgba(255, 20, 147, 0.3);\n}\n\n.glb-filename {\n  margin-top: 10px;\n  padding: 8px;\n  background-color: rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  font-family: monospace;\n}\n\n.model-viewer-container {\n  position: relative;\n  width: 600px;\n  height: 600px;\n  margin: 0 auto;\n}\n\n.error-message {\n  color: #ff4444;\n  background: rgba(255, 0, 0, 0.1);\n  padding: 10px;\n  margin-top: 10px;\n  border-radius: 4px;\n  font-family: monospace;\n}\n\n.glb-info {\n  margin: 15px 0;\n  padding: 10px;\n  background: rgba(0, 0, 0, 0.05);\n  border-radius: 4px;\n}\n\n.glb-filename {\n  font-family: monospace;\n  margin: 5px 0;\n}\n\n.glb-url {\n  font-family: monospace;\n  font-size: 0.8em;\n  word-break: break-all;\n  margin: 5px 0;\n  color: #666;\n}\n\n.navigation-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin: 20px 0;\n  padding: 10px;\n  position: fixed;\n  bottom: 20px;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.9);\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.3);\n  z-index: 1000;\n}\n\n.nav-button {\n  background: transparent;\n  color: white;\n  border: 2px solid #FF1493;\n  padding: 10px 20px;\n  border-radius: 25px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: all 0.3s ease;\n  min-width: 150px;\n}\n\n.nav-button:hover {\n  background: #FF1493;\n  color: white;\n  transform: translateY(-2px);\n}\n\n.nav-button.active {\n  background: #FF1493;\n  color: white;\n}\n\n.App-content {\n  padding-bottom: 80px;\n}\n`;\n\nconst styleSheet = document.createElement(\"style\");\nstyleSheet.innerText = styles;\ndocument.head.appendChild(styleSheet);\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}