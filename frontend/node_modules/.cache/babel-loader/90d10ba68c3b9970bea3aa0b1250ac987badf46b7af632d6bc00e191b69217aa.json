{"ast":null,"code":"const GammaCorrectionShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"\tvec4 tex = texture2D( tDiffuse, vUv );\", \"\t#ifdef LinearTosRGB\", \"\t\tgl_FragColor = LinearTosRGB( tex );\", \"\t#else\", \"\t\tgl_FragColor = sRGBTransferOETF( tex );\", \"\t#endif\", \"}\"].join(\"\\n\")\n};\nexport { GammaCorrectionShader };\n//# sourceMappingURL=GammaCorrectionShader.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}