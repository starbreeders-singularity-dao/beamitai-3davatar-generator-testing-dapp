{"ast":null,"code":"var _jsxFileName = \"/Users/thomasheindl/Documents/beamitai01/beamitai/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport logo from './images/beamit-ai-logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    fetch('/pfp').then(response => response.json()).then(data => setImages(data.images)).catch(error => console.error('Error fetching images:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Beamit AI Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"2D to 3D - it is for real\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Images Loaded: \", images.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert('Generate Avatar'),\n        children: \"Generate Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert('Upload Image'),\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","logo","jsxDEV","_jsxDEV","App","_s","images","setImages","fetch","then","response","json","data","catch","error","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","alert","_c","$RefreshReg$"],"sources":["/Users/thomasheindl/Documents/beamitai01/beamitai/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport logo from './images/beamit-ai-logo.png';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n\n  useEffect(() => {\n    fetch('/pfp')\n      .then(response => response.json())\n      .then(data => setImages(data.images))\n      .catch(error => console.error('Error fetching images:', error));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} alt=\"Beamit AI Logo\" />\n        <h1>2D to 3D - it is for real</h1>\n      </header>\n      <div className=\"App-content\">\n        <p>Images Loaded: {images.length}</p>\n        <button onClick={() => alert('Generate Avatar')}>Generate Avatar</button>\n        <button onClick={() => alert('Upload Image')}>Upload Image</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,MAAM,CAAC,CACVC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,SAAS,CAACK,IAAI,CAACN,MAAM,CAAC,CAAC,CACpCO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAQa,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5Bd,OAAA;QAAKe,GAAG,EAAEjB,IAAK;QAACkB,GAAG,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCpB,OAAA;QAAAc,QAAA,EAAI;MAAyB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACTpB,OAAA;MAAKa,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1Bd,OAAA;QAAAc,QAAA,GAAG,iBAAe,EAACX,MAAM,CAACkB,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCpB,OAAA;QAAQsB,OAAO,EAAEA,CAAA,KAAMC,KAAK,CAAC,iBAAiB,CAAE;QAAAT,QAAA,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzEpB,OAAA;QAAQsB,OAAO,EAAEA,CAAA,KAAMC,KAAK,CAAC,cAAc,CAAE;QAAAT,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CAvBQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}