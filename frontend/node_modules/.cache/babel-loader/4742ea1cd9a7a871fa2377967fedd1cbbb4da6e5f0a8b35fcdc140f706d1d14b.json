{"ast":null,"code":"var _jsxFileName = \"/Users/thomasheindl/Documents/beamitai01/beamitai/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NFTMinter from './components/NFTMinter';\nimport '@google/model-viewer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Hardcoded test data\n  const testGlbUrl = \"http://localhost:5001/test-glb\";\n  const [modelViewerError, setModelViewerError] = useState(null);\n\n  // Create collection on component mount\n  useEffect(() => {\n    const createCollection = async () => {\n      try {\n        const response = await fetch('https://preserve.nft.storage/api/v1/collection/create_collection', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${process.env.REACT_APP_NFT_STORAGE_KEY}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            collectionName: \"BeamitAIAvatars\",\n            contractAddress: \"undefined\",\n            // For testing\n            chainID: \"80002\",\n            // Mumbai testnet\n            network: \"polygon\"\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          console.error('Collection creation failed:', error);\n          return;\n        }\n        const data = await response.json();\n        console.log('Collection created successfully:', data);\n        localStorage.setItem('beamitCollectionId', data.collectionID);\n      } catch (error) {\n        console.error('Error creating collection:', error);\n      }\n    };\n    createCollection();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Beamit AI NFT Minter Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: '600px',\n        height: '600px',\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"model-viewer\", {\n        src: testGlbUrl,\n        alt: \"3D Avatar\",\n        \"auto-rotate\": true,\n        \"camera-controls\": true,\n        \"camera-orbit\": \"0deg 75deg 2.5m\",\n        \"min-camera-orbit\": \"auto auto 1.5m\",\n        \"max-camera-orbit\": \"auto auto 4m\",\n        \"camera-target\": \"0m -0.2m 0m\",\n        bounds: \"tight\",\n        \"field-of-view\": \"30deg\",\n        \"environment-image\": \"neutral\",\n        \"shadow-intensity\": \"1\",\n        exposure: \"1\",\n        \"shadow-softness\": \"1\",\n        \"interaction-prompt\": \"auto\",\n        \"auto-rotate-delay\": \"0\",\n        \"rotation-per-second\": \"30deg\",\n        \"min-field-of-view\": \"25deg\",\n        \"max-field-of-view\": \"45deg\",\n        \"interpolation-decay\": \"200\",\n        loading: \"eager\",\n        reveal: \"auto\",\n        style: {\n          width: '600px',\n          height: '600px',\n          backgroundColor: '#e0e0e0',\n          border: '2px solid #FF1493',\n          transform: 'translateY(-15%)',\n          borderRadius: '8px'\n        },\n        onError: error => {\n          console.error('Model viewer error:', error);\n          setModelViewerError(error.detail);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Debug: GLB URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: testGlbUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        style: {\n          color: '#FF1493'\n        },\n        children: \"Test GLB File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(NFTMinter, {\n        glbUrl: testGlbUrl,\n        originalNFT: {\n          tokenId: \"123\",\n          chainId: 80002\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HQi1+kGROGAA7Pfe12IC5PBekG8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","NFTMinter","jsxDEV","_jsxDEV","App","_s","testGlbUrl","modelViewerError","setModelViewerError","createCollection","response","fetch","method","headers","process","env","REACT_APP_NFT_STORAGE_KEY","body","JSON","stringify","collectionName","contractAddress","chainID","network","ok","error","json","console","data","log","localStorage","setItem","collectionID","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","width","height","margin","src","alt","bounds","exposure","loading","reveal","backgroundColor","border","transform","borderRadius","onError","detail","marginTop","textAlign","href","target","rel","color","glbUrl","originalNFT","tokenId","chainId","_c","$RefreshReg$"],"sources":["/Users/thomasheindl/Documents/beamitai01/beamitai/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport NFTMinter from './components/NFTMinter';\nimport '@google/model-viewer';\nimport './App.css';\n\nfunction App() {\n  // Hardcoded test data\n  const testGlbUrl = \"http://localhost:5001/test-glb\";\n  const [modelViewerError, setModelViewerError] = useState(null);\n\n  // Create collection on component mount\n  useEffect(() => {\n    const createCollection = async () => {\n      try {\n        const response = await fetch('https://preserve.nft.storage/api/v1/collection/create_collection', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${process.env.REACT_APP_NFT_STORAGE_KEY}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            collectionName: \"BeamitAIAvatars\",\n            contractAddress: \"undefined\", // For testing\n            chainID: \"80002\",  // Mumbai testnet\n            network: \"polygon\"\n          })\n        });\n\n        if (!response.ok) {\n          const error = await response.json();\n          console.error('Collection creation failed:', error);\n          return;\n        }\n\n        const data = await response.json();\n        console.log('Collection created successfully:', data);\n        localStorage.setItem('beamitCollectionId', data.collectionID);\n      } catch (error) {\n        console.error('Error creating collection:', error);\n      }\n    };\n\n    createCollection();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Beamit AI NFT Minter Test</h1>\n      \n      {/* 3D Model Viewer */}\n      <div style={{\n        position: 'relative',\n        width: '600px',\n        height: '600px',\n        margin: '0 auto'\n      }}>\n        <model-viewer\n          src={testGlbUrl}\n          alt=\"3D Avatar\"\n          auto-rotate\n          camera-controls\n          camera-orbit=\"0deg 75deg 2.5m\"\n          min-camera-orbit=\"auto auto 1.5m\"\n          max-camera-orbit=\"auto auto 4m\"\n          camera-target=\"0m -0.2m 0m\"\n          bounds=\"tight\"\n          field-of-view=\"30deg\"\n          environment-image=\"neutral\"\n          shadow-intensity=\"1\"\n          exposure=\"1\"\n          shadow-softness=\"1\"\n          interaction-prompt=\"auto\"\n          auto-rotate-delay=\"0\"\n          rotation-per-second=\"30deg\"\n          min-field-of-view=\"25deg\"\n          max-field-of-view=\"45deg\"\n          interpolation-decay=\"200\"\n          loading=\"eager\"\n          reveal=\"auto\"\n          style={{\n            width: '600px', \n            height: '600px', \n            backgroundColor: '#e0e0e0',\n            border: '2px solid #FF1493',\n            transform: 'translateY(-15%)',\n            borderRadius: '8px'\n          }}\n          onError={(error) => {\n            console.error('Model viewer error:', error);\n            setModelViewerError(error.detail);\n          }}\n        ></model-viewer>\n      </div>\n\n      {/* Debug GLB URL */}\n      <div style={{ marginTop: '20px', textAlign: 'center' }}>\n        <p>Debug: GLB URL</p>\n        <a \n          href={testGlbUrl} \n          target=\"_blank\" \n          rel=\"noopener noreferrer\"\n          style={{ color: '#FF1493' }}\n        >\n          Test GLB File\n        </a>\n      </div>\n\n      {/* NFT Minter */}\n      <div style={{ marginTop: '20px', textAlign: 'center' }}>\n        <NFTMinter \n          glbUrl={testGlbUrl}\n          originalNFT={{\n            tokenId: \"123\",\n            chainId: 80002\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}