{"ast":null,"code":"import { Group, Mesh } from \"three\";\nconst SceneUtils = {\n  createMeshesFromInstancedMesh: function (instancedMesh) {\n    const group = new Group();\n    const count = instancedMesh.count;\n    const geometry = instancedMesh.geometry;\n    const material = instancedMesh.material;\n    for (let i = 0; i < count; i++) {\n      const mesh = new Mesh(geometry, material);\n      instancedMesh.getMatrixAt(i, mesh.matrix);\n      mesh.matrix.decompose(mesh.position, mesh.quaternion, mesh.scale);\n      group.add(mesh);\n    }\n    group.copy(instancedMesh);\n    group.updateMatrixWorld();\n    return group;\n  },\n  createMultiMaterialObject: function (geometry, materials) {\n    const group = new Group();\n    for (let i = 0, l = materials.length; i < l; i++) {\n      group.add(new Mesh(geometry, materials[i]));\n    }\n    return group;\n  },\n  detach: function (child, parent, scene) {\n    console.warn(\"THREE.SceneUtils: detach() has been deprecated. Use scene.attach( child ) instead.\");\n    scene.attach(child);\n  },\n  attach: function (child, scene, parent) {\n    console.warn(\"THREE.SceneUtils: attach() has been deprecated. Use parent.attach( child ) instead.\");\n    parent.attach(child);\n  }\n};\nexport { SceneUtils };\n//# sourceMappingURL=SceneUtils.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}