{"ast":null,"code":"import { Validator } from './validator.js';\nimport { ethAbiToJsonSchema } from './utils.js';\nimport { Web3ValidatorError } from './errors.js';\nexport class Web3Validator {\n  constructor() {\n    this._validator = Validator.factory();\n  }\n  validateJSONSchema(schema, data, options) {\n    return this._validator.validate(schema, data, options);\n  }\n  validate(schema, data, options = {\n    silent: false\n  }) {\n    var _a, _b;\n    const jsonSchema = ethAbiToJsonSchema(schema);\n    if (Array.isArray(jsonSchema.items) && ((_a = jsonSchema.items) === null || _a === void 0 ? void 0 : _a.length) === 0 && data.length === 0) {\n      return undefined;\n    }\n    if (Array.isArray(jsonSchema.items) && ((_b = jsonSchema.items) === null || _b === void 0 ? void 0 : _b.length) === 0 && data.length !== 0) {\n      throw new Web3ValidatorError([{\n        instancePath: '/0',\n        schemaPath: '/',\n        keyword: 'required',\n        message: 'empty schema against data can not be validated',\n        params: data\n      }]);\n    }\n    return this._validator.validate(jsonSchema, data, options);\n  }\n}\n//# sourceMappingURL=web3_validator.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}