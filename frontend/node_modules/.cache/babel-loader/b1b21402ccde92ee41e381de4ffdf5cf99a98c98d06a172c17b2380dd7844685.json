{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// https://github.com/ensdomains/ens-contracts/blob/master/contracts/resolvers/PublicResolver.sol\nexport const PublicResolverAbi = [{\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }, {\n    indexed: false,\n    internalType: 'address',\n    name: 'a',\n    type: 'address'\n  }],\n  name: 'AddrChanged',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }, {\n    indexed: false,\n    internalType: 'uint256',\n    name: 'coinType',\n    type: 'uint256'\n  }, {\n    indexed: false,\n    internalType: 'bytes',\n    name: 'newAddress',\n    type: 'bytes'\n  }],\n  name: 'AddressChanged',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'address',\n    name: 'owner',\n    type: 'address'\n  }, {\n    indexed: true,\n    internalType: 'address',\n    name: 'operator',\n    type: 'address'\n  }, {\n    indexed: false,\n    internalType: 'bool',\n    name: 'approved',\n    type: 'bool'\n  }],\n  name: 'ApprovalForAll',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }, {\n    indexed: false,\n    internalType: 'bytes',\n    name: 'hash',\n    type: 'bytes'\n  }],\n  name: 'ContenthashChanged',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }, {\n    indexed: false,\n    internalType: 'bytes',\n    name: 'name',\n    type: 'bytes'\n  }, {\n    indexed: false,\n    internalType: 'uint16',\n    name: 'resource',\n    type: 'uint16'\n  }, {\n    indexed: false,\n    internalType: 'bytes',\n    name: 'record',\n    type: 'bytes'\n  }],\n  name: 'DNSRecordChanged',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }, {\n    indexed: false,\n    internalType: 'bytes',\n    name: 'name',\n    type: 'bytes'\n  }, {\n    indexed: false,\n    internalType: 'uint16',\n    name: 'resource',\n    type: 'uint16'\n  }],\n  name: 'DNSRecordDeleted',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }],\n  name: 'DNSZoneCleared',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }, {\n    indexed: false,\n    internalType: 'bytes',\n    name: 'lastzonehash',\n    type: 'bytes'\n  }, {\n    indexed: false,\n    internalType: 'bytes',\n    name: 'zonehash',\n    type: 'bytes'\n  }],\n  name: 'DNSZonehashChanged',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }, {\n    indexed: true,\n    internalType: 'bytes4',\n    name: 'interfaceID',\n    type: 'bytes4'\n  }, {\n    indexed: false,\n    internalType: 'address',\n    name: 'implementer',\n    type: 'address'\n  }],\n  name: 'InterfaceChanged',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }, {\n    indexed: false,\n    internalType: 'string',\n    name: 'name',\n    type: 'string'\n  }],\n  name: 'NameChanged',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }, {\n    indexed: false,\n    internalType: 'bytes32',\n    name: 'x',\n    type: 'bytes32'\n  }, {\n    indexed: false,\n    internalType: 'bytes32',\n    name: 'y',\n    type: 'bytes32'\n  }],\n  name: 'PubkeyChanged',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }, {\n    indexed: true,\n    internalType: 'string',\n    name: 'indexedKey',\n    type: 'string'\n  }, {\n    indexed: false,\n    internalType: 'string',\n    name: 'key',\n    type: 'string'\n  }],\n  name: 'TextChanged',\n  type: 'event'\n}, {\n  inputs: [{\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }, {\n    internalType: 'uint256',\n    name: 'contentTypes',\n    type: 'uint256'\n  }],\n  name: 'ABI',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }, {\n    internalType: 'bytes',\n    name: '',\n    type: 'bytes'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }],\n  name: 'addr',\n  outputs: [{\n    internalType: 'address payable',\n    name: '',\n    type: 'address'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }, {\n    internalType: 'uint256',\n    name: 'coinType',\n    type: 'uint256'\n  }],\n  name: 'addr',\n  outputs: [{\n    internalType: 'bytes',\n    name: '',\n    type: 'bytes'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }],\n  name: 'contenthash',\n  outputs: [{\n    internalType: 'bytes',\n    name: '',\n    type: 'bytes'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }, {\n    internalType: 'bytes32',\n    name: 'name',\n    type: 'bytes32'\n  }, {\n    internalType: 'uint16',\n    name: 'resource',\n    type: 'uint16'\n  }],\n  name: 'dnsRecord',\n  outputs: [{\n    internalType: 'bytes',\n    name: '',\n    type: 'bytes'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }, {\n    internalType: 'bytes32',\n    name: 'name',\n    type: 'bytes32'\n  }],\n  name: 'hasDNSRecords',\n  outputs: [{\n    internalType: 'bool',\n    name: '',\n    type: 'bool'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }, {\n    internalType: 'bytes4',\n    name: 'interfaceID',\n    type: 'bytes4'\n  }],\n  name: 'interfaceImplementer',\n  outputs: [{\n    internalType: 'address',\n    name: '',\n    type: 'address'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    internalType: 'address',\n    name: 'account',\n    type: 'address'\n  }, {\n    internalType: 'address',\n    name: 'operator',\n    type: 'address'\n  }],\n  name: 'isApprovedForAll',\n  outputs: [{\n    internalType: 'bool',\n    name: '',\n    type: 'bool'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }],\n  name: 'name',\n  outputs: [{\n    internalType: 'string',\n    name: '',\n    type: 'string'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }],\n  name: 'pubkey',\n  outputs: [{\n    internalType: 'bytes32',\n    name: 'x',\n    type: 'bytes32'\n  }, {\n    internalType: 'bytes32',\n    name: 'y',\n    type: 'bytes32'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    internalType: 'bytes4',\n    name: 'interfaceID',\n    type: 'bytes4'\n  }],\n  name: 'supportsInterface',\n  outputs: [{\n    internalType: 'bool',\n    name: '',\n    type: 'bool'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }, {\n    internalType: 'string',\n    name: 'key',\n    type: 'string'\n  }],\n  name: 'text',\n  outputs: [{\n    internalType: 'string',\n    name: '',\n    type: 'string'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }],\n  name: 'zonehash',\n  outputs: [{\n    internalType: 'bytes',\n    name: '',\n    type: 'bytes'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    internalType: 'bytes32',\n    name: 'node',\n    type: 'bytes32'\n  }, {\n    internalType: 'address',\n    name: 'a',\n    type: 'address'\n  }],\n  name: 'setAddr',\n  outputs: [],\n  stateMutability: 'nonpayable',\n  type: 'function'\n}];\n//# sourceMappingURL=PublicResolver.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}