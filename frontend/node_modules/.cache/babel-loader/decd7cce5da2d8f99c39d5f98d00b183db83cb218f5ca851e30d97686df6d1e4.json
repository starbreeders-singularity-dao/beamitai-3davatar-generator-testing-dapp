{"ast":null,"code":"var _jsxFileName = \"/Users/thomasheindl/Documents/beamitai01/beamitai/frontend/src/App-result.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Reuse the same styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AppResult() {\n  _s();\n  const [glbUrl, setGlbUrl] = useState(null);\n  const [processing, setProcessing] = useState(true);\n  const [error, setError] = useState(null);\n  const [fullBodyImage, setFullBodyImage] = useState(null);\n  useEffect(() => {\n    // Get the image URL from the URL parameters\n    const params = new URLSearchParams(window.location.search);\n    const imageUrl = params.get('image');\n    if (imageUrl) {\n      setFullBodyImage(imageUrl);\n    }\n\n    // Start checking for GLB file\n    const interval = setInterval(checkGlbStatus, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const checkGlbStatus = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/model/status');\n      const data = await response.json();\n      console.log('Status check response:', data);\n      if (data.status === 'ready' && data.signedUrl) {\n        setGlbUrl(data.signedUrl);\n        setProcessing(false);\n      }\n    } catch (error) {\n      console.error('Error checking GLB status:', error);\n      setError('Error loading 3D model');\n    }\n  };\n  const handleMintNFT = () => {\n    // Implement NFT minting logic\n    console.log('Minting NFT...');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your 3D Avatar Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-container\",\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          style: {\n            flex: 1,\n            marginRight: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Original Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), fullBodyImage && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: fullBodyImage,\n            alt: \"Full Body\",\n            style: {\n              maxWidth: '100%',\n              height: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"model-container\",\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"3D Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), processing ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Processing your 3D Avatar...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this) : glbUrl ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"model-viewer\", {\n              src: glbUrl,\n              alt: \"3D Avatar\",\n              \"auto-rotate\": true,\n              \"camera-controls\": true,\n              style: {\n                width: '100%',\n                height: '600px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleMintNFT,\n              className: \"nft-button mint-button\",\n              style: {\n                marginTop: '20px'\n              },\n              children: \"Mint NFT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No 3D Avatar available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(AppResult, \"h/a9bAmTBP1t/V+nONdj/JpWm3o=\");\n_c = AppResult;\nexport default AppResult;\nvar _c;\n$RefreshReg$(_c, \"AppResult\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","AppResult","_s","glbUrl","setGlbUrl","processing","setProcessing","error","setError","fullBodyImage","setFullBodyImage","params","URLSearchParams","window","location","search","imageUrl","get","interval","setInterval","checkGlbStatus","clearInterval","response","fetch","data","json","console","log","status","signedUrl","handleMintNFT","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","flex","marginRight","src","alt","maxWidth","height","width","onClick","marginTop","_c","$RefreshReg$"],"sources":["/Users/thomasheindl/Documents/beamitai01/beamitai/frontend/src/App-result.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';  // Reuse the same styling\n\nfunction AppResult() {\n  const [glbUrl, setGlbUrl] = useState(null);\n  const [processing, setProcessing] = useState(true);\n  const [error, setError] = useState(null);\n  const [fullBodyImage, setFullBodyImage] = useState(null);\n\n  useEffect(() => {\n    // Get the image URL from the URL parameters\n    const params = new URLSearchParams(window.location.search);\n    const imageUrl = params.get('image');\n    if (imageUrl) {\n      setFullBodyImage(imageUrl);\n    }\n\n    // Start checking for GLB file\n    const interval = setInterval(checkGlbStatus, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const checkGlbStatus = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/model/status');\n      const data = await response.json();\n      \n      console.log('Status check response:', data);\n      \n      if (data.status === 'ready' && data.signedUrl) {\n        setGlbUrl(data.signedUrl);\n        setProcessing(false);\n      }\n    } catch (error) {\n      console.error('Error checking GLB status:', error);\n      setError('Error loading 3D model');\n    }\n  };\n\n  const handleMintNFT = () => {\n    // Implement NFT minting logic\n    console.log('Minting NFT...');\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1>Your 3D Avatar Result</h1>\n        \n        <div className=\"result-container\" style={{ display: 'flex', justifyContent: 'space-between' }}>\n          {/* Left side - Full Body Image */}\n          <div className=\"image-container\" style={{ flex: 1, marginRight: '20px' }}>\n            <h2>Original Image</h2>\n            {fullBodyImage && (\n              <img \n                src={fullBodyImage} \n                alt=\"Full Body\" \n                style={{ maxWidth: '100%', height: 'auto' }}\n              />\n            )}\n          </div>\n\n          {/* Right side - 3D Model */}\n          <div className=\"model-container\" style={{ flex: 1 }}>\n            <h2>3D Avatar</h2>\n            {processing ? (\n              <div className=\"loading-container\">\n                <p>Processing your 3D Avatar...</p>\n                <div className=\"loading-spinner\"></div>\n              </div>\n            ) : error ? (\n              <p className=\"error-message\">{error}</p>\n            ) : glbUrl ? (\n              <>\n                <model-viewer\n                  src={glbUrl}\n                  alt=\"3D Avatar\"\n                  auto-rotate\n                  camera-controls\n                  style={{ width: '100%', height: '600px' }}\n                ></model-viewer>\n                <button\n                  onClick={handleMintNFT}\n                  className=\"nft-button mint-button\"\n                  style={{ marginTop: '20px' }}\n                >\n                  Mint NFT\n                </button>\n              </>\n            ) : (\n              <p>No 3D Avatar available.</p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AppResult;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}