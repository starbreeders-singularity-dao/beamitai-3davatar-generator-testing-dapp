{"ast":null,"code":"const UnpackDepthRGBAShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    opacity: {\n      value: 1\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform float opacity;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"#include <packing>\", \"void main() {\", \"\tfloat depth = 1.0 - unpackRGBAToDepth( texture2D( tDiffuse, vUv ) );\", \"\tgl_FragColor = vec4( vec3( depth ), opacity );\", \"}\"].join(\"\\n\")\n};\nexport { UnpackDepthRGBAShader };\n//# sourceMappingURL=UnpackDepthRGBAShader.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}