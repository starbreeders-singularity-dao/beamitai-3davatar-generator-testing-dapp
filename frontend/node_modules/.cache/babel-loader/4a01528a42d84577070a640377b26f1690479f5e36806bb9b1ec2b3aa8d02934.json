{"ast":null,"code":"var _jsxFileName = \"/Users/thomasheindl/Documents/beamitai01/beamitai/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n// Import other necessary components and libraries\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [processing, setProcessing] = useState(true);\n  const [glbUrl, setGlbUrl] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Replace with your actual API endpoint\n  const STATUS_API_URL = 'http://localhost:5001/api/videos/status';\n  useEffect(() => {\n    const interval = setInterval(() => {\n      checkGlbStatus();\n    }, 5000); // Check every 5 seconds\n\n    // Initial check\n    checkGlbStatus();\n    return () => clearInterval(interval);\n  }, []);\n  const checkGlbStatus = async () => {\n    try {\n      const response = await fetch(STATUS_API_URL);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Status check response:', data);\n      if (data.glbUrl) {\n        setGlbUrl(data.glbUrl);\n        setProcessing(false);\n      }\n    } catch (err) {\n      console.error('Error fetching GLB status:', err);\n      setError('Failed to fetch GLB status.');\n      setProcessing(false);\n    }\n  };\n  const handleMintNFT = () => {\n    // Your existing NFT minting logic\n    console.log('Mint NFT button clicked');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your 3D Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [processing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Processing your 3D Avatar... Please wait.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }, this), !processing && glbUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-viewer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"model-viewer\", {\n          src: glbUrl,\n          alt: \"3D Avatar\",\n          \"auto-rotate\": true,\n          \"camera-controls\": true,\n          style: {\n            width: '600px',\n            height: '600px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleMintNFT,\n          className: \"nft-button mint-button\",\n          style: {\n            marginTop: '20px'\n          },\n          children: \"Mint NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), !processing && !glbUrl && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No 3D Avatar available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"p7SjTFwpraxIwG2w8MRwd2ISTrk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","processing","setProcessing","glbUrl","setGlbUrl","error","setError","STATUS_API_URL","interval","setInterval","checkGlbStatus","clearInterval","response","fetch","ok","Error","status","data","json","console","log","err","handleMintNFT","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","height","onClick","marginTop","_c","$RefreshReg$"],"sources":["/Users/thomasheindl/Documents/beamitai01/beamitai/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n// Import other necessary components and libraries\n\nfunction App() {\n  const [processing, setProcessing] = useState(true);\n  const [glbUrl, setGlbUrl] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Replace with your actual API endpoint\n  const STATUS_API_URL = 'http://localhost:5001/api/videos/status';\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      checkGlbStatus();\n    }, 5000); // Check every 5 seconds\n\n    // Initial check\n    checkGlbStatus();\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const checkGlbStatus = async () => {\n    try {\n      const response = await fetch(STATUS_API_URL);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Status check response:', data);\n\n      if (data.glbUrl) {\n        setGlbUrl(data.glbUrl);\n        setProcessing(false);\n      }\n    } catch (err) {\n      console.error('Error fetching GLB status:', err);\n      setError('Failed to fetch GLB status.');\n      setProcessing(false);\n    }\n  };\n\n  const handleMintNFT = () => {\n    // Your existing NFT minting logic\n    console.log('Mint NFT button clicked');\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Existing header and other components */}\n\n      <header className=\"App-header\">\n        <h2>Your 3D Avatar</h2>\n      </header>\n\n      <div className=\"content\">\n        {processing && (\n          <div className=\"loading-container\">\n            <p>Processing your 3D Avatar... Please wait.</p>\n            <div className=\"loading-spinner\"></div>\n          </div>\n        )}\n\n        {error && <p className=\"error-message\">{error}</p>}\n\n        {!processing && glbUrl && (\n          <div className=\"model-viewer-container\">\n            <model-viewer\n              src={glbUrl}\n              alt=\"3D Avatar\"\n              auto-rotate\n              camera-controls\n              style={{ width: '600px', height: '600px' }}\n            ></model-viewer>\n            <button\n              onClick={handleMintNFT}\n              className=\"nft-button mint-button\"\n              style={{ marginTop: '20px' }}\n            >\n              Mint NFT\n            </button>\n          </div>\n        )}\n\n        {!processing && !glbUrl && !error && (\n          <p>No 3D Avatar available.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}