{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isAddress } from './address.js';\nimport { isBlockNumberOrTag } from './block.js';\nimport { isNullish } from './object.js';\nimport { isTopic } from './topic.js';\n/**\n * First we check if all properties in the provided value are expected,\n * then because all Filter properties are optional, we check if the expected properties\n * are defined. If defined and they're not the expected type, we immediately return false,\n * otherwise we return true after all checks pass.\n */\nexport const isFilterObject = value => {\n  const expectedFilterProperties = ['fromBlock', 'toBlock', 'address', 'topics', 'blockHash'];\n  if (isNullish(value) || typeof value !== 'object') return false;\n  if (!Object.keys(value).every(property => expectedFilterProperties.includes(property))) return false;\n  if (!isNullish(value.fromBlock) && !isBlockNumberOrTag(value.fromBlock) || !isNullish(value.toBlock) && !isBlockNumberOrTag(value.toBlock)) return false;\n  if (!isNullish(value.address)) {\n    if (Array.isArray(value.address)) {\n      if (!value.address.every(address => isAddress(address))) return false;\n    } else if (!isAddress(value.address)) return false;\n  }\n  if (!isNullish(value.topics)) {\n    if (!value.topics.every(topic => {\n      if (isNullish(topic)) return true;\n      if (Array.isArray(topic)) {\n        return topic.every(nestedTopic => isTopic(nestedTopic));\n      }\n      if (isTopic(topic)) return true;\n      return false;\n    })) return false;\n  }\n  return true;\n};\n//# sourceMappingURL=filter.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}